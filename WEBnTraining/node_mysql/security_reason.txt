node.js 로 mysql을 다뤄 보았습니다. 
마지막 챕터로 보안에 대해 말해주셨습니다. 들어오는 모든 정보는 오염되어 있다고 여겨야 한다.
들어오는 정보란 예를 들면 이번에 구현 하였던 웹 어플리케이션에서 
글목록에 접근하면 쿼리스트링으로 id 값이 들어오고 프로그램에서 id값에 해당하는 데이터를 
표시 해주었습니다. 이 때의 쿼리스트링이 오염되어 있을 수 있고 또 글을 생성하거나 저자를 
생성 할 때도 들어오는 정보가 오염되어 있을 수 있습니다. 

하지만 이미 배운 코드에는 어떠한 보안조치가 취해져 있는데 바로 
db.query('SELECT * FROM topic WHERE id=?', [queryDate.id], function(error, results){});
이런 코드를 많이 사용 했었는데 이중 id=? 과 [queryDate.id] 부분입니다.
쿼리 스트링이 위험한 것은 ?id=1 이라는 쿼리스트링 뒤에 만약 
?id=1;DROP TABLE topic; 이렇게 입력 된다면 topic이라는 테이블 전체가 삭제 되게 됩니다. 
그냥 주소창에 몇글자 적는것 만으로 치명적인 피해를 입게 되는겁니다. 

 위의 물음표와 
[]안에 값을 주는 방법은 위와 같은 오염된 데이터가 들어오더라도 실제 mysql에서 받는 쿼리는 이럴 것입니다.
?id='1;DROP TABLE topic;'  
이렇게 1과 오염된 쿼리가 따옴표로 묵여 있어 쿼리가 아닌 문자로 취급되어 에러 처리가 되게 됩니다.

이 밖에 많은 보안적 기술들이 있을것입니다만 예시로써 위와 같은 한가지 방법을 배웠습니다.