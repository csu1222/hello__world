<CS50> 데이비드 j.말란

  1강 컴퓨팅 사고 
컴퓨터사이언스의 개론?에 대한 강의인 cs50에서 첫 강의로 컴퓨팅적인 사고를 주제로 삼았습니다. 강의 순서는
1) 2진법
2) 정보의 표현
3) 알고리즘 
4) 스크래치(비주얼적으로 표현된 코딩 학습도구)
이렇게 4파트로 이루어져 있었습니다. 

1-1 2진법 - 우선 2진법에 대한 이야기는 컴퓨터의 기본 요소이기 때문에 첫 주제로 삼으신거 같습니다.
제가 살아가면서 정확한 이유는 모르지만 얼핏 듣기로는 컴퓨터는 0과 1로 이루어져있다고 듣고는 했습니다. 예전 crashcourse 라는 
유튜브 채널의 컴퓨터 사이언스 강의들을 들은적이 있습니다. 이 cs50강의에서도 언급하였던 것이 컴퓨터의 기본 단위가 트랜지스터 라는 
것이었습니다. 트랜지스터라는 온 오프 상태를 나타낼수 있는 것으로 트랜지스터를 잘 이용하여 2진법으로 표현할 수 있고 또 불리언 값
true는 1, false는 0 라고 간주하여 표현하기도 합니다. 그리고 몇개의 트랜지스터를 알맞게 연결하여 논리회로를 표현하고 , 
더욱 많은 0과 1로 일종의 주소를 만들어 RAM이나 ROM 같은 저장공간, 또 CPU자체가 이런것들을 모아놓은 두뇌라고 들었습니다.
이런 것들을 대략적으로 말하여 컴퓨터가 0과 1로 이루어져 있다 라는 이야기인것 같습니다.

1-2 정보의 표현 - 0과 1로 이루어진 컴퓨터에서 숫자는 2진법을 10진법으로 해석 가능할 것입니다. 하지만 2진법인 숫자를 어떻게 
문자, 이미지, 소리 등을 표현할 수 있을까요? 수십년전 0과 1로 알파벳같은 문자를 표현하기위해 일종의 약속을 하였습니다. "2진법으로 
몇번이라고 하면 이것은 이 알파벳 이야!" 라는 식으로 말입니다. 이것을 ASCII 아스키코드라고 합니다.
American Standard Code for Information Interchange 의 약자인데요 이름에서도 보이듯이 미국에서 정한 기준입니다. 하지만 요즘은 
단순히 알파벳정도만 쓰는정도가 아니죠 여러 나라의 문자도 있고 기본적으로 🤣이런 이모지 도 내장되어있는 새로운 기준을 씁니다.
이 기준의 이름은 Unicode라는 이름입니다. 문자는 이렇게 하나씩 코드를 나열하여 표현한다고 하고 이미지 같은 경우는 어떨까요
다들 픽셀이라는 말을 들어봤을 것입니다. 컴퓨터나 스마트폰 태블릿PC등 디지털 디바이스에서 이미지나 화면의 해상도를 말할때 
픽셀이 얼마나 많느냐 라고 합니다. 이미지를 이루는 픽셀들에 컴퓨터는 2진법으로도 좌표를 지정 할수 있을 것입니다. 또 RGB이라는 
빨강,초록,파랑 이라는 빛의 3원색을 어떻게 조합하느냐로 색을 지정할 수도 있을것입니다. 그러면 하나하나 지정된 좌표의 픽셀이 
어떠한 색이라고 지정한다면 이 픽셀들을 쌓아 하나의 이미지로 보이게 할 수도 있을 것입니다. 이것은 사실 지금 쓰고 있는 텍스트에도 
적용되는 사항입니다 . 이 텍스트도 단색으로 표현된 이미지라고 할 수도 있기때문입니다.😁 소리, 음악, 영상은 어떻게 표현할까요? 
일단 영상의 경우 이미지의 연장선상에 있습니다. 여러 연결된 이미지를 빠르게 보여주는것이 영상입니다. 뇌가 충분히 정지된 이미지를 
움직이고 있다고 착각할 만큼 빠르게 보여주면 되는것이었습니다. 음악, 소리는 같은 원리인데요 소리는 시간에따라 크기, 음계를 진동수
에 하나 하나 숫자를 대입하여 저장 할 수있습니다.

1-3 알고리즘 - 위에서 정보를 입력하는 방식을 배웠습니다. 하지만 컴퓨터는 단순히 정보를 입력하는 것만 할수 있는게 아니죠 
입력한 정보를 어떠한 과정을 거쳐 원하는 출력값으로 받을 수 있습니다. 지금 말한 어떠한 과정이 알고리즘이라고 할 수 있을것 입니다.
알고리즘은 입력값을 출력값의 형태로 바꾸기 위해 어떤 명령들이 수행 되어야 하는지에 대한 규칙들의 순서적 나열입니다.
좋은 알고리즘의 요건에는 정확함과 효율적임이 있어야 할 것입니다. 정보를 가공하는데에 있어 정확한 값이 나오도록 명령들을 나열해야 
할 것이고, 효율적인 명령들로 정보를 가공해야 컴퓨터의 리소스를 절약하여 성능적으로 많은 이득을 봐야 할 것입니다.
예를 들면 탐색하는 알고리즘으로 100페이지의 전화번호부에 천성욱 이라는 이름을 찾는다고 하면 일단 맨 첫페이지 부터 한장씩 찾아보는 방법
이 하나 있을것이고 혹은 전화번호부의 중간을 펼쳐서 이름이 있는지 확인하고 절반의 앞이나 뒤쪽중 해당하는 곳에 절반을 다시 열어보고를 
반복하여 찾는 방법도 있을 것입니다. 둘다 시간을 들이면 확실히 이름이 어디있는지 찾을 수 있을것입니다 이름이 처음부터 전화번호부에 없지만
않다면요. 두 방법다 알고리즘으로써 정확성은 갖추고 있다고 할 수 있겠습니다. 그렇다면 어느 쪽이 효율적인가 살펴보면 첫번째 방법은 
가장 오래걸리는 경우 100페이지를 전부 봐야합니다. 반면 두번째 절반 씩 찾아보는 경우 첫시도에 50페이지, 두번째에 25페이지, 세번째에 12나 
13페이지, 네번째에 6페이지 정도, 다섯번째에 3페이지, 여섯번째에 2페이지 , 일곱번째에 1페이지 가 남는 가장 오래걸리는 경우에 일곱정도에 
찾을수 있을 것입니다.최대 100번의 시도와 7번의 시도 어느 쪽이 효율적인가요 이런식으로 같은 결과를 내고 같은 정확성을 가진 알고리즘이지만 
효율성에는 차이가 있을수 있습니다. 또 이런 알고리즘을 프로그래밍적이면서 사람의 언어로 적어보는 것을 의사코드라고 합니다.예를 들면
1.전화번호부를 집는다.
2.전화번호부의 중간을 펼친다.
3.페이지를 확인한다
4.만약 찾는 이름이 있다면
5.  그 번호로 전화한다.
6.만약 찾는 이름이 절반의 페이지중 앞쪽에 있다면
7.  전화번호부의 앞쪽 절반을 펼친다.
8.  3번째 줄의 명령으로 간다.
9.만약 찾는 이름이 절반의 페이지중 뒷쪽에 있다면
10. 전화번호부의 뒷쪽 절반을 펼친다.
11. 3번째 줄의 명령으로 간다.
12.이도 저도 아니면
13.행위를 중지한다.
이렇게 적는 것이 의사코드입니다. 