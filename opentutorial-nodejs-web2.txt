#URL :  예시 URL
  http://opentutorials.org:3000/main?id=HTML&page=12
  여기서 http 부분은 protocol 통신규칙 이라고 합니다. 사용자가 서버에 접속 할 때 어떤 방식으로 할 것 인가에 대한 부분입니다.
  그다음 opentutorials.org부분은 host (domain name 이라고도 합니다.) 인터넷에 접속 되어있는 각각의 컴퓨터를 host 라고 합니다. 각 컴퓨터의 이름이라고 할 수 있겠습니다.
  :3000 부분은 port 라고 부릅니다. 한개의 컴퓨터(host)에 여러 서버가 있을 수 있습니다. 그 중 port 번호로 실행된 서버와 통신하기 위한 번호입니다.
  / 뒤에 main 부분은 path 입니다. host 컴퓨터 안에 있는 어떤 디렉토리의 어떤 파일인지를 가르킵니다.
  ?id=HTML&page=12 부분은 query string 입니다. 이 query string으로 앞부분의 서버에게 데이터를 전달 할 수 있습니다. 어떤 가령 id가 HTML인 파일을 원한다. 그리고 복수의 데이터를 전달하기 위해서는 & 으로 연결해줍니다. 다시 page는 12번을 원한다는 의미가 됩니다.

#node.js 에서 url 추출하기 : 예시로 
[protocol] ://[host]:[port]/[query string] 의 형태에서 query string 부분을 추출 하고 싶습니다. 일단 강의 예제 파일은 아래 와 같습니다.
var http = require('http');
var fs = require('fs');

var app = http.createServer(function(request,response){
    var _url = request.url;
    console.log(_url);
    if(_url == '/'){
      _url = '/index.html';
    }
    if(_url == '/favicon.ico'){
        response.writeHead(404);
        response.end();
        return;
    }
    response.writeHead(200);
    response.end(fs.readFileSync(__dirname + _url);
 
});
app.listen(3000);

위 코드에서 8번째 줄에 있는 console.log(_url); 의 출력 값이 콘솔 화면에 query string 부분을 출력 해주었습니다.  그리고 node.js의 기본 모듈인 url을 임포트 하고
 
var url = require('url') 

어플리케이션 안에 query string 을 분석하는 코드를 적습니다.

var queryData = url.parse(_url, true).query;

여기서 parse의 두번째 인수로 true를 주면 query data의 데이터형을 object 로 반환해주고인수가 false였으면 데이터형을 string으로 반환해준다고 합니다.
그래서 console.log(queryData); 를 해보면 query string이 {... : ...}, {... : ...}같이 object로 콘솔에 출력됩니다. 

#동적인 웹 어플리케이션 - 1 
query string으로 어플리케이션에 동적인 변화를 줄 수 있었습니다. 위의 queryData라는 변수는 예를 들어 /?id=HTML이라는 query string을 주면 id 키 값을 가진 오브젝트가 생성되고 queryData.id 이런 식으로 HTML 이라는 값을 얻을 수 있습니다. 이러한 점을 이용해 URL에 query string 이라는 형식으로 어떤 데이터를 입력하면 그에 맞추어 웹이 동적으로 움직일 수 있었습니다.

#파일 읽기 - 정보 시스템의 핵심적인 요소로 CRUD 중 Read에 대해 공부 했습니다. node js 로 file을 읽기 위해 nodejs file read 로 구글링해서 nodejs 공식 document를 찾아 봤습니다.  설명에 따르면 
FileSystem을 require 하고 

var fs = require('fs')

readFile 메소드를 불러 첫번째 인자로 읽어올 파일의 위치를 문자열로 입력합니다. 두번째 인자로 error 와 data 를 인자로 받을 콜백 함수를 줍니다. 콜백 함수에서 data 값을 사용하면 된다고 나와 console.log 로 출력해보았으나 buffer ~~~ 라고 출력이되어 readFile메소드의 두 인자 사이에 문자열로 utf-8 이라는
문자 인코딩 방식을 인자로 준 결과 제대로 출력되었습니다.

fs.readFile('읽을 파일의 경로', 'utf-8', function(err, data){
              console.log(data);
});
